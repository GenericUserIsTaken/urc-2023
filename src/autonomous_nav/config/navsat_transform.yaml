navsat_transform_node:
  ros__parameters:
    frequency: 20.0  # how fast to produce transforms/odometry
    use_odometry_yaw: false # Use IMU yaw, corrected by GPS velocity
    use_manual_datum: false
    wait_for_datum: false

    # The frame in which your final odometry will be published
    # often "map" or "odom"
    world_frame: "map"

    # The robot's body frame (e.g., "base_link")
    base_link_frame: "zed_camera_link"

    # The coordinate frame that will be attached to the navsat transform
    # typically a new "gps" or "utm" or "odom" frame
    frame_id: "gps_link"

    # Topics
    # Raw lat/lon data from GPS
    gps_topic: "/fix"

    # IMU data (used for yaw heading if you have one)
    # This can be the same IMU the EKF uses, or a different one
    imu_topic: "/zed/zed_node/imu/data"

    # The published topic for local odom
    # e.g. /odometry/gps or /gps/odom
    # This is what you'll feed into the EKF node as an "odom" source
    odom_topic: "/odometry/gps"

    # If you want to fuse altitude from GPS as well, set "use_altitude: true"
    use_altitude: true

    # Yaw correction using GPS velocity
    # If your IMU frame differs from GPS (e.g., NED vs ENU), adjust this
    yaw_offset: 0.0  # Optional: Set to 1.5708 (90Â°) if IMU is rotated relative to GPS

    # Additional params for tuning
    magnetic_declination: 0.0  # Set if you know your local declination, though no magnetometer here
    zero_altitude: false       # Keep false since you want real altitude
